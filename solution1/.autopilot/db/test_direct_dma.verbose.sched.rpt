

================================================================
== Vivado HLS Report for 'test_direct_dma'
================================================================
* Date:           Sat Apr 18 21:58:17 2015

* Version:        2014.1 (build date: Fri Apr 04 13:20:25 PM 2014)
* Project:        test_direct_dma
* Solution:       solution1
* Product family: zynq zynq_fpv6 
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |  10.00|      2.52|        1.25|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 3  |    ?|    ?|         1|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+-------+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT  |
+-----------------+---------+-------+-------+-------+
|Expression       |        -|      -|      -|      -|
|FIFO             |        -|      -|      -|      -|
|Instance         |        -|      -|      -|      -|
|Memory           |        -|      -|      -|      -|
|Multiplexer      |        -|      -|      -|      -|
|Register         |        -|      -|      -|      -|
+-----------------+---------+-------+-------+-------+
|Total            |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+
|Available        |      120|     80|  35200|  17600|
+-----------------+---------+-------+-------+-------+
|Utilization (%)  |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+---------+--------------+--------+
|        RTL Ports       | Dir | Bits| Protocol| Source Object| C Type |
+------------------------+-----+-----+---------+--------------+--------+
|s_axi_AXILiteS_AWVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_AWADDR   |  in |    6|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WVALID   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WREADY   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WDATA    |  in |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_WSTRB    |  in |    4|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARVALID  |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARREADY  | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_ARADDR   |  in |    6|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RDATA    | out |   32|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_RRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BVALID   | out |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BREADY   |  in |    1|  s_axi  |   AXILiteS   | scalar |
|s_axi_AXILiteS_BRESP    | out |    2|  s_axi  |   AXILiteS   | scalar |
+------------------------+-----+-----+---------+--------------+--------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	3  / (!read_mover_halt_complete_read)
	4  / (read_mover_halt_complete_read)
4 --> 
	4  / (!write_mover_halt_complete_read)
	5  / (write_mover_halt_complete_read)
5 --> 
	5  / (tmp_2)
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: length_read [1/1] 0.00ns
:13  %length_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %length_r)

ST_1: destinationAddress_read [1/1] 0.00ns
:14  %destinationAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %destinationAddress)

ST_1: sourceAddress_read [1/1] 0.00ns
:15  %sourceAddress_read = call i32 @_ssdm_op_Read.ap_vld.i32(i32 %sourceAddress)

ST_1: sourceAddress_assign [1/1] 0.00ns
:16  %sourceAddress_assign = alloca i32, align 4

ST_1: destinationAddress_assign [1/1] 0.00ns
:17  %destinationAddress_assign = alloca i32, align 4

ST_1: length_assign [1/1] 0.00ns
:18  %length_assign = alloca i32, align 4

ST_1: stg_12 [1/1] 0.00ns
:19  store volatile i32 %sourceAddress_read, i32* %sourceAddress_assign, align 4

ST_1: stg_13 [1/1] 0.00ns
:20  store volatile i32 %destinationAddress_read, i32* %destinationAddress_assign, align 4

ST_1: stg_14 [1/1] 0.00ns
:21  store volatile i32 %length_read, i32* %length_assign, align 4


 <State 2>: 0.00ns
ST_2: stg_15 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i72* %read_mover_V_V), !map !7

ST_2: stg_16 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i72* %write_mover_V_V), !map !11

ST_2: stg_17 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i128* %in_stream_V_V), !map !15

ST_2: stg_18 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i128* %out_stream_V_V), !map !19

ST_2: stg_19 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32 %sourceAddress), !map !23

ST_2: stg_20 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32 %destinationAddress), !map !29

ST_2: stg_21 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %length_r), !map !33

ST_2: stg_22 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i1* %read_mover_halt), !map !37

ST_2: stg_23 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i1* %read_mover_halt_complete), !map !41

ST_2: stg_24 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i1* %write_mover_halt), !map !45

ST_2: stg_25 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i1* %write_mover_halt_complete), !map !49

ST_2: stg_26 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !53

ST_2: stg_27 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecTopModule([16 x i8]* @str) nounwind

ST_2: stg_28 [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecWire(i1* %write_mover_halt_complete, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_29 [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecWire(i1* %write_mover_halt, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_30 [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecWire(i1* %read_mover_halt_complete, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_31 [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecWire(i1* %read_mover_halt, [8 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_32 [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecWire(i72* %write_mover_V_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_33 [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecWire(i72* %read_mover_V_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_34 [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecWire(i32 0, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_35 [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecWire(i32 %length_r, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_36 [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecWire(i32 %length_r, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_37 [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_38 [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [7 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_39 [1/1] 0.00ns
:33  call void (...)* @_ssdm_op_SpecWire(i128* %out_stream_V_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_40 [1/1] 0.00ns
:34  call void (...)* @_ssdm_op_SpecWire(i128* %in_stream_V_V, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_41 [1/1] 0.00ns
:35  call void (...)* @_ssdm_op_SpecWire(i32 %destinationAddress, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: stg_42 [1/1] 0.00ns
:36  call void (...)* @_ssdm_op_SpecWire(i32 %sourceAddress, [10 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_2: sourceOffset_0 [1/1] 0.00ns
:37  %sourceOffset_0 = load volatile i32* %sourceAddress_assign, align 4

ST_2: destOffset_0 [1/1] 0.00ns
:38  %destOffset_0 = load volatile i32* %destinationAddress_assign, align 4

ST_2: length_assign_load [1/1] 0.00ns
:39  %length_assign_load = load volatile i32* %length_assign, align 4

ST_2: tmp [1/1] 0.00ns
:40  %tmp = trunc i32 %length_assign_load to i28

ST_2: read_length [1/1] 0.00ns
:41  %read_length = shl i32 %length_assign_load, 4

ST_2: stg_48 [1/1] 0.00ns
:42  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %read_mover_halt, i1 true)

ST_2: stg_49 [1/1] 0.00ns
:43  br label %1


 <State 3>: 0.00ns
ST_3: read_mover_halt_complete_read [1/1] 0.00ns
:0  %read_mover_halt_complete_read = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %read_mover_halt_complete)

ST_3: stg_51 [1/1] 0.00ns
:1  br i1 %read_mover_halt_complete_read, label %3, label %2

ST_3: stg_52 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %read_mover_halt, i1 false)

ST_3: stg_53 [1/1] 0.00ns
:1  br label %1

ST_3: stg_54 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %write_mover_halt, i1 true)

ST_3: stg_55 [1/1] 0.00ns
:1  br label %4


 <State 4>: 1.57ns
ST_4: write_mover_halt_complete_read [1/1] 0.00ns
:0  %write_mover_halt_complete_read = call i1 @_ssdm_op_Read.ap_none.volatile.i1P(i1* %write_mover_halt_complete)

ST_4: stg_57 [1/1] 0.00ns
:1  br i1 %write_mover_halt_complete_read, label %6, label %5

ST_4: stg_58 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_none.volatile.i1P(i1* %write_mover_halt, i1 false)

ST_4: stg_59 [1/1] 0.00ns
:1  br label %4

ST_4: p_Repl2_1 [1/1] 0.00ns
:0  %p_Repl2_1 = load volatile i32* %sourceAddress_assign, align 4

ST_4: p_Result_s [1/1] 0.00ns
:1  %p_Result_s = call i72 @_ssdm_op_BitConcatenate.i72.i8.i32.i28.i4(i8 0, i32 %p_Repl2_1, i28 %tmp, i4 0)

ST_4: stg_62 [1/1] 0.00ns
:2  call void @_ssdm_op_Write.axis.volatile.i72P(i72* %read_mover_V_V, i72 %p_Result_s)

ST_4: p_Repl2_2 [1/1] 0.00ns
:3  %p_Repl2_2 = load volatile i32* %destinationAddress_assign, align 4

ST_4: p_Result_1 [1/1] 0.00ns
:4  %p_Result_1 = call i72 @_ssdm_op_BitConcatenate.i72.i8.i32.i28.i4(i8 0, i32 %p_Repl2_2, i28 %tmp, i4 0)

ST_4: stg_65 [1/1] 0.00ns
:5  call void @_ssdm_op_Write.axis.volatile.i72P(i72* %write_mover_V_V, i72 %p_Result_1)

ST_4: stg_66 [1/1] 1.57ns
:6  br label %7


 <State 5>: 2.52ns
ST_5: i [1/1] 0.00ns
:0  %i = phi i32 [ 0, %6 ], [ %i_1, %8 ]

ST_5: length_assign_load_1 [1/1] 0.00ns
:1  %length_assign_load_1 = load volatile i32* %length_assign, align 4

ST_5: tmp_2 [1/1] 2.52ns
:2  %tmp_2 = icmp slt i32 %i, %length_assign_load_1

ST_5: i_1 [1/1] 2.44ns
:3  %i_1 = add nsw i32 %i, 1

ST_5: stg_71 [1/1] 0.00ns
:4  br i1 %tmp_2, label %8, label %9

ST_5: tmp_V_2 [1/1] 0.00ns
:0  %tmp_V_2 = call i128 @_ssdm_op_Read.axis.volatile.i128P(i128* %in_stream_V_V)

ST_5: stg_73 [1/1] 0.00ns
:1  call void @_ssdm_op_Write.axis.volatile.i128P(i128* %out_stream_V_V, i128 %tmp_V_2)

ST_5: stg_74 [1/1] 0.00ns
:2  br label %7

ST_5: stg_75 [1/1] 0.00ns
:0  ret i32 %read_length



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
